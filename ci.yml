pipeline:
  name: cf-app-autoscaler-platform-pipeline
  git:
    owner: starkandwayne
    repo:  demo-autoscaler-deployments
    private_key: (( vault "concourse/demo/autoscaler/github:private_key" ))

#  notifications: parallel

  slack:
    channel: '#concourse'
    webhook: (( vault "concourse/demo/autoscaler/slack:webhook" ))

#  email:
#    stanza: here

  vault:
    url:    https://10.4.1.7
    verify: no
    role:   (( vault "secret/exodus/ci/genesis-pipelines:approle-id" ))
    secret: (( vault "secret/exodus/ci/genesis-pipelines:approle-secret" ))

#  locker:
    

  boshes:
    dev:
      url:      https://10.4.16.4:25555
      ca_cert:  (( vault "secret/dev/bosh/ssl/ca:certificate" ))
      username: admin
      password: (( vault "secret/dev/bosh/users/admin:password" ))

    uswest2demo:
      url:      https://10.4.1.4:25555
      ca_cert:  (( vault "secret/uswest2demo/bosh/ssl/ca:certificate" ))
      username: admin
      password: (( vault "secret/uswest2demo/bosh/users/admin:password" ))

#  smoke-tests: run-my-smoke-tests
#  tagged: yes

  layouts:
    # genesis repipe                 ; if target is 'default'
    # genesis repipe -t azure        ; if target is 'azure' instead
    default: |+
      auto *dev
      dev -> uswest2demo

#jobs:
#- name: testflight
#  public: false
#  serial: true
#  serial_groups: [genesis-ci]
#  plan:
#  - do:
#    - in_parallel:
#      - { get: git, trigger: true,  passed: [dev-cf-app-autoscaler] }
#      - { get: git-ci }
#    - task: testflights
#      file: git-ci/ci/tasks/test-flight/task.yml
#      params:
#        GENESIS_HONOR_ENV:    1
#        GIT_NAME:             (( grab meta.git.name ))
#        GIT_EMAIL:            (( grab meta.git.email ))
#        VAULT_URI:            (( grab meta.vault.url ))
#        VAULT_TOKEN:          (( grab meta.vault.token ))
#        KIT_SHORTNAME:        (( grab meta.kit ))
#        BOSH_ENVIRONMENT:     (( grab meta.bosh.uri ))
#        BOSH_CA_CERT:         (( grab meta.bosh.cacert ))
#        BOSH_CLIENT:          (( grab meta.bosh.username ))
#        BOSH_CLIENT_SECRET:   (( grab meta.bosh.password ))
#    on_success:
#      put: notify
#      params:
#        topic:   (( concat meta.shout.topic "-$BUILD_JOB_NAME" ))
#        message: tests job '$BUILD_JOB_NAME' succeeded.
#        ok:      yes
#        link:    (( grab meta.shout.links.build ))
#    on_failure:
#      put: notify
#      params:
#        topic:   (( concat meta.shout.topic "-$BUILD_JOB_NAME" ))
#        message: tests job '$BUILD_JOB_NAME' failed.
#        ok:      no
#        link:    (( grab meta.shout.links.build ))

    # genesis repipe onprem          ; if target is 'onprem'
    # genesis repipe -t ci onprem    ; if it is 'ci' instead
#    onprem: |+
#      auto *sandbox *preprod
#      on-prem-1-sandbox -> on-prem-1-preprod -> on-prem-1-prod
#      on-prem-2-sandbox -> on-prem-2-preprod -> on-prem-2-prod

#  groups:
#    default:
#    - sandbox
#    - preprod
#    - prod

#    onprem1:
#    - on-prem-1-sandbox
#    - on-prem-1-preprod
#    - on-prem-1-prod

#    onprem2:
#    - on-prem-2-sandbox
#    - on-prem-2-preprod
#    - on-prem-2-prod
